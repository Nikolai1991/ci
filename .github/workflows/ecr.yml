# This workflow will build and push a new container image to Amazon ECR
on:
  push:
    paths:
    - 'CI-build-docker-image/Nginx/**'
    - '.github/workflows/**'
    - 'package.json'

name: Deploy to Amazon ECR
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          persist-credentials: false
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: semantic-release-action
      uses: codfish/semantic-release-action@master
      id: semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      working-directory: CI-build-docker-image/Nginx/
      if: steps.semantic.outputs.new-release-published == 'true'
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$TAG"
      env:
        TAG: v${{ steps.semantic.outputs.release-version }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-action-nginx

    - name: Checkout canary-app repo
      uses: actions/checkout@v2
      with:
        repository: ${{ secrets.USERNAME }}/canary-app
        path: canary-app
        persist-credentials: false
    
    - name: Git init
      working-directory: canary-app/
      run: |
        git init
        git config --global user.email "${{ secrets.EMAIL }}"
        git config --global user.name "${{ secrets.USERNAME }}"
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git remote set-url origin https://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@github.com/${{ secrets.USERNAME }}/canary-app.git
        git pull origin dev --allow-unrelated-histories
    
    - name: Update Values files
      working-directory: canary-app/
      if: steps.semantic.outputs.new-release-published == 'true'
      run: |
        sed -i 's|image:.*|image: v${{ steps.semantic.outputs.release-version }}|g' kubernetes-manifests/nginx-app/*.yaml
        sed -i 's|AppVersion:.*|AppVersion: ${{ steps.build-image.outputs.image }}|g' kubernetes-manifests/nginx-app/*.yaml
        
    - name: Push files
      working-directory: canary-app/
      run: |
        git checkout dev
        git add .
        git commit -m "Github Actions Automatically Built in `date +"%Y-%m-%d %H:%M"`" 
        git push origin dev
