# This workflow will build and push a new container image to Amazon ECR
on:
  push:
    paths:
    - 'CI-build-docker-image/Nginx/**'
    - '.github/workflows/**'

name: Deploy to Amazon ECR
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
          persist-credentials: false
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: github-action-nginx
      working-directory: CI-build-docker-image/Nginx/
      run: |
        # Build a docker container and
        # push it to ECR.
        GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c1-7)
        IMAGE_TAG=${GITHUB_SHA_SHORT:=latest}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    
    - name: Checkout canary-app repo
      uses: actions/checkout@v2
      with:
        repository: ${{ secrets.USERNAME }}/canary-app
        path: canary-app
        persist-credentials: false
    
    - name: Create local changes
      working-directory: canary-app/kubernetes-manifests/nginx-app/
      run: |
        sed -i 's|image:.*|image: ${{ steps.build-image.outputs.image }}|g' values-prod.yaml
    
    - name: Push files
      working-directory: canary-app/
      run: |
        rm -rf .git
        git init
        git config --global user.email "${{ secrets.EMAIL }}"
        git config --global user.name "${{ secrets.USERNAME }}"
        git config receive.denyNonFastForwards false
        git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
        git pull git pull origin dev
        git add .
        git commit -m "Github Actions Automatically Built in `date +"%Y-%m-%d %H:%M"`"
        # git remote add origin "https://github.com/${{ secrets.USERNAME }}/canary-app.git"
        git remote set-url origin https://${{ secrets.USERNAME }}:${{ secrets.PASSWORD }}@github.com/${{ secrets.USERNAME }}/canary-app.git
        git checkout -b dev 
        git push --set-upstream origin dev
